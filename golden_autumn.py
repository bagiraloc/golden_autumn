# golden_autumn.py
import streamlit as st
import pandas as pd
import random
import html

# -------------------- –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ --------------------
st.set_page_config(page_title="–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025", layout="wide")

# -------------------- CSS —Å—Ç–∏–ª—å (—Ç–µ–º–Ω–∞ —Ç–µ–º–∞) --------------------
# –ú–∏ –ø—ñ–¥—Å—Ç–∞–≤–∏–º–æ –∑–º—ñ–Ω–Ω—É font_size –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤, —â–æ–± "–∑–º–µ–Ω—à—É–≤–∞—Ç–∏" —Ç–∞–±–ª–∏—Ü—é –ø—Ä–∏ –≤–µ–ª–∏–∫—ñ–π –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —É—á–∞—Å–Ω–∏—Ü—å.
def make_css(font_size_px=18):
    return f"""
    <style>
    :root {{ --accent: #f6c453; --bg:#0e0e0f; --card:#1a1a1a; --muted:#bfbfbf; }}
    body {{
        background: linear-gradient(180deg, #0d0d0d, #121212);
        color: var(--accent);
        font-family: 'Inter', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
    }}
    h1 {{
        text-align: center;
        color: var(--accent);
        font-weight: 800;
        text-shadow: 0 0 20px rgba(246,196,83,0.25);
        margin-bottom: 12px;
    }}
    .subtitle {{
        text-align: center;
        color: #e8d8b0;
        margin-bottom: 18px;
    }}
    .top-leaf {{ position: relative; width:100%; text-align:center; font-size:34px; margin-bottom: -12px; }}
    .leaf {{
        position: fixed;
        top: -10vh;
        color: var(--accent);
        opacity: 0.95;
        animation: fall linear infinite;
        z-index: 0;
        pointer-events: none;
        transform-origin: center;
    }}
    @keyframes fall {{
        0% {{ transform: translateY(-10vh) rotate(0deg); opacity: 1; }}
        100% {{ transform: translateY(110vh) rotate(360deg); opacity: 0.9; }}
    }}
    .table-wrap {{
        width: 98%;
        margin: 0 auto 1.5rem auto;
        z-index: 1;
    }}
    table.leaderboard {{
        width: 100%;
        border-collapse: collapse;
        background: rgba(20,20,20,0.85);
        color: var(--accent);
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 6px 30px rgba(0,0,0,0.6);
        font-size: {font_size_px}px;
    }}
    table.leaderboard th, table.leaderboard td {{
        padding: 12px 10px;
        text-align: center;
    }}
    table.leaderboard th {{
        background: #222;
        color: var(--accent);
        border-bottom: 2px solid #b8860b;
        font-weight: 700;
    }}
    tr.new-row {{
        animation: slideUp 0.9s ease-out;
    }}
    @keyframes slideUp {{
        from {{ transform: translateY(40px); opacity: 0; }}
        to {{ transform: translateY(0); opacity: 1; }}
    }}
    .crown {{
        animation: crownPulse 2.5s ease-in-out infinite;
        padding: 0 6px;
    }}
    @keyframes crownPulse {{
        0%,100% {{ text-shadow: 0 0 8px #ffd700; }}
        50% {{ text-shadow: 0 0 20px #ffea00; }}
    }}
    /* input form styling */
    .form-row {{
        display:flex;
        gap:10px;
        justify-content:center;
        align-items:center;
        margin: 18px 0 30px 0;
        flex-wrap:wrap;
    }}
    .stButton>button {{
        background: linear-gradient(90deg, #f6c453, #b8860b);
        color: #1a1a1a !important;
        border: none;
        border-radius: 8px;
        font-weight: 700;
        padding: 8px 14px;
        cursor: pointer;
    }}
    /* small screens */
    @media (max-width: 700px) {{
        table.leaderboard td, table.leaderboard th {{ padding:8px; }}
    }}
    </style>
    """

# -------------------- –õ–∏—Å—Ç–æ—á–∫–∏ (–∫–ª–µ–Ω–æ–≤—ã–µ —Ç–æ–ª—å–∫–æ) --------------------
def render_leaves(n=16):
    leaves_html = ""
    for i in range(n):
        left = random.randint(0, 95)
        duration = random.uniform(12, 26)
        delay = random.uniform(0, 10)
        size = random.uniform(18, 36)
        leaf = "üçÅ"  # only maple
        leaves_html += f'<div class="leaf" style="left:{left}vw; animation-duration:{duration}s; animation-delay:{delay}s; font-size:{size}px;">{leaf}</div>'
    return leaves_html

# -------------------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ session_state --------------------
if "results" not in st.session_state:
    st.session_state.results = pd.DataFrame(columns=["–ú—ñ—Å—Ü–µ", "–Ü–º‚Äô—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])
if "last_added" not in st.session_state:
    st.session_state.last_added = None

# -------------------- –õ–æ–≥–∏–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—è —á–µ—Ä–µ–∑ JS (5 —Å–µ–∫—É–Ω–¥) --------------------
# –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–µ–≤–∏–¥–∏–º–∏–π HTML, —è–∫–∏–π –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î —Å—Ç–æ—Ä—ñ–Ω–∫—É –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥
# –Ø–∫—â–æ —Ü–µ –∑–∞–≤–∞–∂–∞—î –≤–≤–µ–¥–µ–Ω–Ω—é ‚Äî –º–æ–∂–Ω–∞ —Ç–∏–º—á–∞—Å–æ–≤–æ –ø—Ä–∏–±—Ä–∞—Ç–∏ —Ä—è–¥–æ–∫ –∞–±–æ –∑–º–µ–Ω—à–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä–≤–∞–ª.
auto_refresh_js = """
<script>
const interval = 5000;
setInterval(() => {
    // –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ª–∏—à–µ —è–∫—â–æ —Ñ–æ–∫—É—Å –Ω–µ –≤ –ø–æ–ª—ñ –≤–≤–æ–¥—É
    if (!document.activeElement || document.activeElement.tagName !== 'INPUT' && document.activeElement.tagName !== 'TEXTAREA') {
        window.location.reload();
    }
}, interval);
</script>
"""
st.components.v1.html(auto_refresh_js, height=0)

# -------------------- –†–µ–Ω–¥–µ—Ä —Å—Ç–æ—Ä—ñ–Ω–∫–∏ --------------------
# –æ–±—á–∏—Å–ª—é—î–º–æ font-size –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤ (—â–æ–± "–≤–º—ñ—â—É–≤–∞—Ç–∏" —Ç–∞–±–ª–∏—Ü—é)
row_count = len(st.session_state.results)
base_font = 18
if row_count <= 6:
    font_size = base_font
elif row_count <= 12:
    font_size = max(12, base_font - 2)
else:
    font_size = max(10, base_font - min(8, (row_count - 6)//2))

st.markdown(make_css(font_size), unsafe_allow_html=True)
st.markdown(render_leaves(14), unsafe_allow_html=True)

st.markdown("<h1>üëë –ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÅ</h1>", unsafe_allow_html=True)
st.markdown('<div class="subtitle">–¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Ç–∞–±–ª–∏—Ü—è ‚Äî –≤–≤–æ–¥—å—Ç–µ –¥–∞–Ω—ñ –∑–Ω–∏–∑—É. –ù–æ–≤—ñ —É—á–∞—Å–Ω–∏—Ü—ñ –∞–Ω—ñ–º–æ–≤–∞–Ω–æ –ø—ñ–¥—Ç—è–≥—É—é—Ç—å—Å—è.</div>', unsafe_allow_html=True)

# -------------------- –§–æ—Ä–º–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –≤–Ω–∏–∑—É (–º–∏ –ø–æ–∫–∞–∂–µ–º–æ —ó—ó —Ç—É—Ç, –∞–ª–µ –≤–æ–Ω–∞ –≤ —Å—Ç–∏–ª—ñ "–≤–Ω–∏–∑—É") --------------------
with st.form(key="add_form", clear_on_submit=True):
    c1, c2, c3, c4, c5 = st.columns([3,3,2,2,1])
    name = c1.text_input("–Ü–º'—è")
    club = c2.text_input("–ö–ª—É–±")
    category = c3.text_input("–í–∏–¥")
    score = c4.text_input("–û—Ü—ñ–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 27.750)")
    add_btn = c5.form_submit_button("‚ûï –î–æ–¥–∞—Ç–∏")

# -------------------- –î–æ–¥–∞–≤–∞–Ω–Ω—è —É—á–∞—Å–Ω–∏—Ü—ñ –≤ —Ç–∞–±–ª–∏—Ü—é --------------------
if add_btn:
    if not name.strip():
        st.error("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è —É—á–∞—Å–Ω–∏—Ü—ñ.")
    else:
        try:
            # —è–∫—â–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫ –¥–ª—è –æ—Ü—ñ–Ω–∫–∏ ‚Äî —Å—Ç–∞–≤–∏–º–æ NaN
            score_val = None
            if score and score.strip():
                score_val = float(score.replace(",", "."))
            new_row = {"–ú—ñ—Å—Ü–µ": None, "–Ü–º‚Äô—è": name.strip(), "–ö–ª—É–±": club.strip(), "–í–∏–¥": category.strip(), "–û—Ü—ñ–Ω–∫–∞": score_val}
            # –¥–æ–¥–∞—î–º–æ —á–µ—Ä–µ–∑ concat (append deprecated —É –Ω–æ–≤–∏—Ö pandas)
            df = st.session_state.results.copy()
            df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
            # —Å–æ—Ä—Ç—É—î–º–æ (NaN –≤–Ω–∏–∑—É)
            df["–û—Ü—ñ–Ω–∫–∞"] = pd.to_numeric(df["–û—Ü—ñ–Ω–∫–∞"], errors="coerce")
            df = df.sort_values(by="–û—Ü—ñ–Ω–∫–∞", ascending=False, na_position="last").reset_index(drop=True)
            df["–ú—ñ—Å—Ü–µ"] = df.index + 1
            st.session_state.results = df
            st.session_state.last_added = name.strip()
            # –©–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –∑–º—ñ–Ω–∏ –Ω–µ–≥–∞–π–Ω–æ (–Ω–µ –∑–∞–≤–∂–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ) ‚Äî rerun:
            st.exp
