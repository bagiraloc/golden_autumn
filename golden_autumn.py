import streamlit as st
import pandas as pd
import time
from streamlit_autorefresh import st_autorefresh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÇ", layout="wide")

# --- –†–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ---
mode = st.sidebar.radio("–†–µ–∂–∏–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è:", ["–°—É–¥–¥—è", "–ï–∫—Ä–∞–Ω"])

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö ---
if "data" not in st.session_state:
    st.session_state.data = pd.DataFrame(columns=["–Ü–º'—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])

# --- –§—É–Ω–∫—Ü—ñ—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —É—á–∞—Å–Ω–∏—Ü—ñ ---
def add_participant(name, club, category, score):
    if name and club and category and score:
        new_row = pd.DataFrame(
            [[name.strip().upper(), club.strip(), category.strip(), float(score)]],
            columns=["–Ü–º'—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"]
        )
        st.session_state.data = pd.concat([st.session_state.data, new_row], ignore_index=True)
        st.session_state.data = st.session_state.data.sort_values(by="–û—Ü—ñ–Ω–∫–∞", ascending=False).reset_index(drop=True)
        st.success(f"‚úÖ –î–æ–¥–∞–Ω–æ: {name}")
    else:
        st.warning("‚ö†Ô∏è –ó–∞–ø–æ–≤–Ω–∏ –≤—Å—ñ –ø–æ–ª—è!")

# --- –§—É–Ω–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ ---
def clear_table():
    st.session_state.data = pd.DataFrame(columns=["–Ü–º'—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])
    st.success("üßπ –¢–∞–±–ª–∏—Ü—é –æ—á–∏—â–µ–Ω–æ!")

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ---
st.markdown(
    "<h1 style='text-align: center; color: goldenrod;'>–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÅ</h1>",
    unsafe_allow_html=True
)

# --- –°–£–î–î–Ø ---
if mode == "–°—É–¥–¥—è":
    st.markdown("### –í–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Å—É–¥–¥—ñ")

    col1, col2, col3, col4 = st.columns([2, 2, 2, 1])

    with col1:
        name = st.text_input("–Ü–º‚Äô—è —É—á–∞—Å–Ω–∏—Ü—ñ")
    with col2:
        club = st.text_input("–ö–ª—É–±")
    with col3:
        category = st.text_input("–í–∏–¥")
    with col4:
        score = st.text_input("–û—Ü—ñ–Ω–∫–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ 27.700)")

    c1, c2 = st.columns([1, 1])
    with c1:
        if st.button("‚ûï –î–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü—é"):
            add_participant(name, club, category, score)
    with c2:
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é"):
            clear_table()

    st.markdown("---")

# --- –ï–ö–†–ê–ù ---
else:
    st.markdown("### üèÜ –¢—É—Ä–Ω—ñ—Ä–Ω–∞ —Ç–∞–±–ª–∏—Ü—è (—Ä–µ–∂–∏–º –µ–∫—Ä–∞–Ω–∞)")
    st_autorefresh(interval=10000, limit=None, key="autorefresh")

# --- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ ---
if not st.session_state.data.empty:
    df = st.session_state.data.copy()
    df["–ú—ñ—Å—Ü–µ"] = range(1, len(df) + 1)
    df = df[["–ú—ñ—Å—Ü–µ", "–Ü–º'—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"]]

    # –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–ª–∞–≤–Ω–æ–≥–æ –∑‚Äô—è–≤–ª–µ–Ω–Ω—è
    st.markdown(
        """
        <style>
        @keyframes fadeIn {
            from {opacity: 0; transform: translateY(10px);}
            to {opacity: 1; transform: translateY(0);}
        }
        div[data-testid="stDataFrame"] {
            animation: fadeIn 0.8s ease-in-out;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    st.dataframe(
        df.style.format({"–û—Ü—ñ–Ω–∫–∞": "{:.3f}"}).set_table_styles(
            [
                {"selector": "th", "props": [("background-color", "#FFD700"), ("color", "black"), ("font-weight", "bold")]},
                {"selector": "td", "props": [("background-color", "#222"), ("color", "#EEE")]},
            ]
        ),
        use_container_width=True,
        height=550,
    )
else:
    st.info("–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏—Ü—å üëÄ")

# --- –ü—ñ–¥–ø–∏—Å ---
st.markdown("<p style='text-align:center; color:gray;'>Streamlit –≤–µ—Ä—Å—ñ—è —Ç—É—Ä–Ω—ñ—Ä–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ ‚Äî –ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025</p>", unsafe_allow_html=True)
