import streamlit as st
import pandas as pd
import time
import random
from streamlit_gsheets import GSheetsConnection

# üåë –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025", page_icon="üëë", layout="centered")

# üëë –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("""
    <h1 style='text-align:center; color:gold;'>
        üëë –ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÅ
    </h1>
""", unsafe_allow_html=True)

# üåø CSS ‚Äî –∞–Ω–∏–º–∞—Ü–∏—è –ª–∏—Å—Ç—å–µ–≤ –∏ —Å—Ç–∏–ª—å —Ç–∞–±–ª–∏—Ü—ã
st.markdown("""
    <style>
    body {
        background-color: #0e1117;
        color: white;
    }

    /* üçÅ –ü–∞–¥–∞—é—â–∏–µ –ª–∏—Å—Ç—å—è */
    @keyframes fall {
        0% { transform: translateY(-10vh) rotate(0deg); opacity: 1; }
        100% { transform: translateY(110vh) rotate(360deg); opacity: 0; }
    }

    .leaf {
        position: fixed;
        top: 0;
        font-size: 2rem;
        animation: fall linear infinite;
        opacity: 0.8;
    }

    /* üìã –¢–∞–±–ª–∏—Ü–∞ */
    table {
        border-collapse: collapse;
        width: 100%;
        font-size: 1.2rem;
        animation: fadeIn 1s ease-in-out;
    }
    th, td {
        padding: 10px;
        text-align: center;
        border-bottom: 1px solid #444;
    }
    th {
        background-color: #222;
        color: gold;
    }
    tr:hover {
        background-color: #333;
    }

    @keyframes fadeIn {
        from {opacity: 0; transform: translateY(10px);}
        to {opacity: 1; transform: translateY(0);}
    }
    </style>
""", unsafe_allow_html=True)

# üçÅ –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ª–∏—Å—Ç—å—è
for i in range(10):
    st.markdown(
        f"<div class='leaf' style='left:{random.randint(0,90)}vw; animation-duration:{random.randint(8,15)}s; animation-delay:{random.random()*5}s;'>üçÅ</div>",
        unsafe_allow_html=True
    )

# ‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
try:
    conn = st.connection("gsheets", type=GSheetsConnection)
    df = conn.read(worksheet="–ê—Ä–∫—É—à1", ttl=5)
except Exception:
    st.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è Google Sheets. –ü–µ—Ä–µ–≤—ñ—Ä –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∞–±–æ –¥–æ—Å—Ç—É–ø.")
    st.stop()

# üßÆ –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è ‚Äî —Å–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω
if df is None or df.empty:
    df = pd.DataFrame(columns=["–ú—ñ—Å—Ü–µ", "–Ü–º'—è", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])

# üëë –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–æ–Ω—É –ª–∏–¥–µ—Ä—É
if not df.empty:
    try:
        df["–û—Ü—ñ–Ω–∫–∞"] = pd.to_numeric(df["–û—Ü—ñ–Ω–∫–∞"], errors="coerce")
        df = df.sort_values(by="–û—Ü—ñ–Ω–∫–∞", ascending=False)
        df.iloc[0, df.columns.get_loc("–Ü–º'—è")] = "üëë " + str(df.iloc[0]["–Ü–º'—è"])
    except Exception:
        pass

# üìä –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
st.markdown(
    df.to_html(index=False, escape=False),
    unsafe_allow_html=True
)

# üîÅ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
st.markdown("<p style='text-align:center; color:gray;'>‚è≥ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—ñ 5 —Å–µ–∫—É–Ω–¥</p>", unsafe_allow_html=True)
time.sleep(5)
st.experimental_rerun()

# üßæ –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
st.markdown("<hr>", unsafe_allow_html=True)
st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü—é")

with st.form("add_participant", clear_on_submit=True):
    place = st.text_input("–ú—ñ—Å—Ü–µ")
    name = st.text_input("–Ü–º'—è")
    club = st.text_input("–ö–ª—É–±")
    apparatus = st.text_input("–í–∏–¥")
    score = st.text_input("–û—Ü—ñ–Ω–∫–∞")

    submitted = st.form_submit_button("–î–æ–¥–∞—Ç–∏")

    if submitted:
        if name:
            new_row = pd.DataFrame([[place, name, club, apparatus, score]], columns=df.columns)
            df = pd.concat([df, new_row], ignore_index=True)
            conn.update(worksheet="–ê—Ä–∫—É—à1", data=df)
            st.success(f"‚úÖ –£—á–∞—Å–Ω–∏—Ü—é {name} –¥–æ–¥–∞–Ω–æ!")
            time.sleep(1)
            st.experimental_rerun()
        else:
            st.warning("‚ö†Ô∏è –í–≤–µ–¥—ñ—Ç—å —ñ–º'—è —É—á–∞—Å–Ω–∏—Ü—ñ –ø–µ—Ä–µ–¥ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º.")
