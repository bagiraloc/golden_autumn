import streamlit as st
import pandas as pd
import json, time
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from streamlit.components.v1 import html

# ---------- –ù–ê–°–¢–†–û–ô–ö–ò ----------
st.set_page_config(page_title="üëë –ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÅ", layout="wide")

# ---------- –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –ö GOOGLE SHEETS ----------
sa_json = json.loads(st.secrets["gsheets_service_account"])
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(sa_json, scope)
client = gspread.authorize(creds)

SPREADSHEET_URL = "https://docs.google.com/spreadsheets/d/1S5mf3gVU-FHgOJ_kpfTn02ZzYeXMw0VTfGNX-RL6KMY/edit#gid=0"
sheet = client.open_by_url(SPREADSHEET_URL).sheet1

# ---------- –ó–ê–ì–†–£–ó–ö–ê –ò –°–û–•–†–ê–ù–ï–ù–ò–ï ----------
def load_data():
    data = sheet.get_all_records()
    return pd.DataFrame(data)

def save_data(df):
    sheet.clear()
    sheet.update([df.columns.values.tolist()] + df.values.tolist())

# ---------- UI ----------
st.markdown(
    "<h1 style='text-align:center;'>üëë –ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025 üçÅ</h1>",
    unsafe_allow_html=True
)

# ---------- –¢–ê–ë–õ–ò–¶–ê ----------
placeholder = st.empty()

# —Ñ—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
def render_table():
    df = load_data()
    if df.empty:
        st.warning("–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î —É—á–∞—Å–Ω–∏—Ü—å üë©‚Äçüåæ")
    else:
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—É–º–º–µ –±–∞–ª–ª–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–ª–æ–Ω–∫–∞ '–ë–∞–ª–∏')
        if '–ë–∞–ª–∏' in df.columns:
            df = df.sort_values(by='–ë–∞–ª–∏', ascending=False)

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å—Ç—Ä–æ–∫
        max_height = min(600, 100 + len(df) * 40)
        html_table = df.to_html(index=False, justify='center', border=0)
        html(
            f"""
            <div style='text-align:center; font-size:22px;'>
                <img src="https://cdn-icons-png.flaticon.com/512/616/616408.png" width="50">
                <div style='height:{max_height}px; overflow:auto;'>
                    {html_table}
                </div>
            </div>
            <script>
                const table = document.querySelector('table');
                table.style.animation = 'fadein 1s ease';
                const style = document.createElement('style');
                style.innerHTML = `
                    @keyframes fadein {{ from {{opacity:0; transform:translateY(10px)}} to {{opacity:1; transform:translateY(0)}} }}
                    table {{ animation: fadein 1s; width:80%; margin:auto; border-collapse:collapse; }}
                    th, td {{ padding:10px; border-bottom:1px solid #ddd; }}
                    th {{ background:#f9f3d2; }}
                `;
                document.head.appendChild(style);
            </script>
            """,
            height=max_height + 120,
        )

# ---------- –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –û–ë–ù–û–í–õ–ï–ù–ò–Ø ----------
render_table()
st_autorefresh = st.empty()

# ---------- –§–û–†–ú–ê –í–í–û–î–ê ----------
st.markdown("---")
st.subheader("‚ûï –î–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü—é")

with st.form("add_form", clear_on_submit=True):
    name = st.text_input("–Ü–º‚Äô—è")
    score = st.number_input("–ë–∞–ª–∏", min_value=0, step=1)
    submit = st.form_submit_button("üíæ –ó–±–µ—Ä–µ–≥—Ç–∏")

if submit and name:
    df = load_data()
    df = pd.concat([df, pd.DataFrame({"–Ü–º‚Äô—è": [name], "–ë–∞–ª–∏": [score]})], ignore_index=True)
    save_data(df)
    st.success(f"‚úÖ {name} –¥–æ–¥–∞–Ω–æ!")
    time.sleep(1)
    st.experimental_rerun()

# –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
st_autorefresh.write("<meta http-equiv='refresh' content='5'>", unsafe_allow_html=True)
