import streamlit as st
import pandas as pd
import random

# ---------- Page config ----------
st.set_page_config(page_title="–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025", layout="wide")

# ---------- Styles ----------
st.markdown(
    """
<style>
.stApp {
  background-color: #0d0d0d !important;
  color: #f6c453 !important;
}
h1 {
  text-align:center;
  color:#f6c453;
  text-shadow:0 0 20px #f6c453;
}
.leaf {
  position: fixed;
  top: -12vh;
  color: #ffd54f !important;
  font-size: 28px;
  opacity: 0.9;
  animation: fall linear infinite;
  z-index: 0;
}
@keyframes fall {
  0% { transform: translateY(-10vh) rotate(0deg); opacity: 1; }
  100% { transform: translateY(120vh) rotate(360deg); opacity: 0.1; }
}
.table-wrap { width:100%; overflow:auto; }
.results-table {
  width:100%; border-collapse: collapse;
  background: rgba(25,25,25,0.95);
  color:#f6c453;
  box-shadow: 0 8px 30px rgba(0,0,0,0.6);
  border-radius:12px;
}
.results-table th, .results-table td {
  padding:10px; text-align:center;
  border-bottom:1px solid rgba(246,196,83,0.08);
}
.results-table th {
  background:#151515; color:#f6c453; font-weight:600;
}
.row-new {
  animation: slideUp 0.9s cubic-bezier(.2,.8,.2,1);
  background: rgba(246,196,83,0.05);
}
@keyframes slideUp {
  from { transform: translateY(40px); opacity: 0; }
  to   { transform: translateY(0); opacity: 1; }
}
.crown {
  display:inline-block;
  animation: crownPulse 2.2s ease-in-out infinite;
}
@keyframes crownPulse {
  0%,100% { transform: scale(1); text-shadow: 0 0 10px #ffd54f; }
  50%    { transform: scale(1.12); text-shadow: 0 0 30px #ffea7a; }
}
.stButton>button {
  background: linear-gradient(90deg, #f6c453, #b8860b) !important;
  color:#0d0d0d !important; border:none; border-radius:8px; padding:8px 14px;
}
</style>
""",
    unsafe_allow_html=True,
)

# ---------- Leaves ----------
leaves_html = ""
for i in range(28):
    left = random.randint(0, 100)
    dur = random.uniform(16, 30)
    delay = random.uniform(0, 20)
    leaves_html += f'<div class="leaf" style="left:{left}vw; animation-duration:{dur}s; animation-delay:{delay}s;">üçÅ</div>'
st.markdown(leaves_html, unsafe_allow_html=True)

# ---------- Session init ----------
if "results" not in st.session_state:
    st.session_state.results = pd.DataFrame(columns=["–ú—ñ—Å—Ü–µ", "–ü—Ä—ñ–∑–≤–∏—â–µ", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])
if "last_added" not in st.session_state:
    st.session_state.last_added = None

# ---------- Header ----------
st.markdown("<h1>–ó–æ–ª–æ—Ç–∞ –û—Å—ñ–Ω—å 2025</h1>", unsafe_allow_html=True)

# ---------- Admin form ----------
with st.expander("–ü–∞–Ω–µ–ª—å —Å—É–¥–¥—ñ (–¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤)", expanded=True):
    with st.form("add_form", clear_on_submit=True):
        c1, c2, c3, c4 = st.columns(4)
        fname = c1.text_input("–ü—Ä—ñ–∑–≤–∏—â–µ")
        club = c2.text_input("–ö–ª—É–±")
        event = c3.text_input("–í–∏–¥")
        score_input = c4.text_input("–û—Ü—ñ–Ω–∫–∞ (–Ω–∞–ø—Ä., 27.750)")

        submit = st.form_submit_button("‚ûï –î–æ–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏—Ü—é")
        clear = st.form_submit_button("üßπ –û—á–∏—Å—Ç–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é")

    # –û—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—î—ó —Ç–∞–±–ª–∏—Ü—ñ
    if clear:
        st.session_state.results = pd.DataFrame(columns=["–ú—ñ—Å—Ü–µ", "–ü—Ä—ñ–∑–≤–∏—â–µ", "–ö–ª—É–±", "–í–∏–¥", "–û—Ü—ñ–Ω–∫–∞"])
        st.session_state.last_added = None
        st.success("–¢–∞–±–ª–∏—Ü—é –æ—á–∏—â–µ–Ω–æ!")

# ---------- –û–±—Ä–æ–±–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è ----------
if submit:
    if not fname or not club or not event or not score_input:
        st.warning("–ó–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –ø–æ–ª—è –ø–µ—Ä–µ–¥ –¥–æ–¥–∞–≤–∞–Ω–Ω—è–º.")
    else:
        try:
            val = float(score_input.replace(",", "."))
            new_row = {"–ú—ñ—Å—Ü–µ": None, "–ü—Ä—ñ–∑–≤–∏—â–µ": fname.strip(), "–ö–ª—É–±": club.strip(), "–í–∏–¥": event.strip(), "–û—Ü—ñ–Ω–∫–∞": val}
            st.session_state.results = pd.concat([st.session_state.results, pd.DataFrame([new_row])], ignore_index=True)
            st.session_state.results["–û—Ü—ñ–Ω–∫–∞"] = st.session_state.results["–û—Ü—ñ–Ω–∫–∞"].astype(float)
            st.session_state.results = st.session_state.results.sort_values(by="–û—Ü—ñ–Ω–∫–∞", ascending=False, ignore_index=True)
            st.session_state.results["–ú—ñ—Å—Ü–µ"] = range(1, len(st.session_state.results) + 1)
            st.session_state.last_added = fname.strip()
            st.success(f"‚úÖ –£—á–∞—Å–Ω–∏—Ü—é {fname} –¥–æ–¥–∞–Ω–æ!")
        except ValueError:
            st.error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –æ—Ü—ñ–Ω–∫–∏. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä. 27.750")

# ---------- –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ ----------
df_display = st.session_state.results.copy()
if not df_display.empty:
    df_display["–û—Ü—ñ–Ω–∫–∞"] = df_display["–û—Ü—ñ–Ω–∫–∞"].map(lambda x: f"{x:.3f}")
    df_display.loc[0, "–ü—Ä—ñ–∑–≤–∏—â–µ"] = f"<span class='crown'>üëë {df_display.loc[0, '–ü—Ä—ñ–∑–≤–∏—â–µ']}</span>"

    rows = ""
    for _, r in df_display.iterrows():
        cls = "row-new" if (st.session_state.last_added and str(r["–ü—Ä—ñ–∑–≤–∏—â–µ"]).replace('üëë ','').lower() == st.session_state.last_added.lower()) else ""
        rows += (
            f"<tr class='{cls}'>"
            f"<td>{int(r['–ú—ñ—Å—Ü–µ'])}</td>"
            f"<td>{r['–ü—Ä—ñ–∑–≤–∏—â–µ']}</td>"
            f"<td>{r['–ö–ª—É–±']}</td>"
            f"<td>{r['–í–∏–¥']}</td>"
            f"<td>{r['–û—Ü—ñ–Ω–∫–∞']}</td>"
            f"</tr>"
        )

    table_html = (
        "<div class='table-wrap'>"
        "<table class='results-table'>"
        "<thead><tr><th>–ú—ñ—Å—Ü–µ</th><th>–ü—Ä—ñ–∑–≤–∏—â–µ</th><th>–ö–ª—É–±</th><th>–í–∏–¥</th><th>–û—Ü—ñ–Ω–∫–∞</th></tr></thead>"
        f"<tbody>{rows}</tbody></table></div>"
    )
    st.markdown(table_html, unsafe_allow_html=True)
else:
    st.markdown(
        """
        <div class="table-wrap">
          <table class="results-table">
            <thead><tr><th>–ú—ñ—Å—Ü–µ</th><th>–ü—Ä—ñ–∑–≤–∏—â–µ</th><th>–ö–ª—É–±</th><th>–í–∏–¥</th><th>–û—Ü—ñ–Ω–∫–∞</th></tr></thead>
            <tbody></tbody>
          </table>
        </div>
        """,
        unsafe_allow_html=True,
    )

# ---------- –ö–æ—Ä–æ–Ω–∞ "–ø—É–ª—å—Å—É—î" –∫–æ–∂–Ω—ñ 25 —Å–µ–∫—É–Ω–¥ ----------
st.markdown(
    """
<script>
setInterval(()=>{
  const c = document.querySelector('.crown');
  if(c){
    c.style.transform = 'scale(1.15)';
    setTimeout(()=>{ c.style.transform = 'scale(1)'; }, 1000);
  }
}, 25000);
</script>
""",
    unsafe_allow_html=True,
)
